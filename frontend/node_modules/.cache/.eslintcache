[{"D:\\Study Projects\\React project1\\frontend\\src\\index.js":"1","D:\\Study Projects\\React project1\\frontend\\src\\App.js":"2","D:\\Study Projects\\React project1\\frontend\\src\\reportWebVitals.js":"3","D:\\Study Projects\\React project1\\frontend\\src\\screens\\ProductScreen.js":"4","D:\\Study Projects\\React project1\\frontend\\src\\screens\\HomeScreen.js":"5","D:\\Study Projects\\React project1\\frontend\\src\\components\\Product.js":"6","D:\\Study Projects\\React project1\\frontend\\src\\components\\Rating.js":"7","D:\\Study Projects\\React project1\\frontend\\src\\Store.js":"8","D:\\Study Projects\\React project1\\frontend\\src\\screens\\CartScreen.js":"9","D:\\Study Projects\\React project1\\frontend\\src\\components\\MessageBox.js":"10","D:\\Study Projects\\React project1\\frontend\\src\\screens\\SigninScreen.js":"11","D:\\Study Projects\\React project1\\frontend\\src\\screens\\ShippingAddressScreen.js":"12","D:\\Study Projects\\React project1\\frontend\\src\\components\\ChecokoutSteps.js":"13","D:\\Study Projects\\React project1\\frontend\\src\\screens\\SignupScreen.js":"14","D:\\Study Projects\\React project1\\frontend\\src\\screens\\PaymentMethodScreen.js":"15","D:\\Study Projects\\React project1\\frontend\\src\\screens\\PlaceOrderScreen.js":"16","D:\\Study Projects\\React project1\\frontend\\src\\screens\\OrderScreen.js":"17","D:\\Study Projects\\React project1\\frontend\\src\\utils.js":"18"},{"size":899,"mtime":1685002560554,"results":"19","hashOfConfig":"20"},{"size":3746,"mtime":1685006050521,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1683139262496,"results":"22","hashOfConfig":"20"},{"size":5236,"mtime":1683328017041,"results":"23","hashOfConfig":"20"},{"size":1874,"mtime":1683321111391,"results":"24","hashOfConfig":"20"},{"size":1782,"mtime":1683332245850,"results":"25","hashOfConfig":"20"},{"size":1699,"mtime":1683315162718,"results":"26","hashOfConfig":"20"},{"size":2685,"mtime":1684628011382,"results":"27","hashOfConfig":"20"},{"size":4819,"mtime":1684636030423,"results":"28","hashOfConfig":"20"},{"size":169,"mtime":1683328341696,"results":"29","hashOfConfig":"20"},{"size":2585,"mtime":1684264960547,"results":"30","hashOfConfig":"20"},{"size":3780,"mtime":1684492731967,"results":"31","hashOfConfig":"20"},{"size":459,"mtime":1684492566534,"results":"32","hashOfConfig":"20"},{"size":3364,"mtime":1684494030974,"results":"33","hashOfConfig":"20"},{"size":2364,"mtime":1685005401691,"results":"34","hashOfConfig":"20"},{"size":8133,"mtime":1685019296642,"results":"35","hashOfConfig":"20"},{"size":10841,"mtime":1685020996710,"results":"36","hashOfConfig":"20"},{"size":161,"mtime":1684633691518,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"16aojzn",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"41"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"41"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"D:\\Study Projects\\React project1\\frontend\\src\\index.js",[],[],[],"D:\\Study Projects\\React project1\\frontend\\src\\App.js",[],[],"D:\\Study Projects\\React project1\\frontend\\src\\reportWebVitals.js",[],[],"D:\\Study Projects\\React project1\\frontend\\src\\screens\\ProductScreen.js",[],[],"D:\\Study Projects\\React project1\\frontend\\src\\screens\\HomeScreen.js",[],[],"D:\\Study Projects\\React project1\\frontend\\src\\components\\Product.js",[],[],"D:\\Study Projects\\React project1\\frontend\\src\\components\\Rating.js",[],[],"D:\\Study Projects\\React project1\\frontend\\src\\Store.js",[],[],"D:\\Study Projects\\React project1\\frontend\\src\\screens\\CartScreen.js",["97"],[],"import { useContext } from \"react\"\r\nimport { Store } from \"../Store\"\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Button, Card, Col, ListGroup, ListGroupItem, Row, } from \"react-bootstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport axios from \"axios\";\r\n\r\nexport default function CartScreen() {\r\n    const navigate = useNavigate();\r\n    const { state, dispatch: ctxDispatch } = useContext(Store);\r\n    const {\r\n        cart: {cartItems},\r\n    } = state;\r\n\r\n    const updateCartHandler = async (item, quantity) => {\r\n        const {data} = await axios.get(`http://127.0.0.1:9000/api/products/${item._id}`);\r\n        if (data.countInStock < quantity) {\r\n            window.alert('Sorry, out of stock!');\r\n            return;\r\n        }\r\n        ctxDispatch({\r\n            type:'CART_ADD_ITEM',\r\n            payload: {...item, quantity},    \r\n        });\r\n    }\r\n    const removeItemHandler = (item) => {\r\n        ctxDispatch({ type: 'CART_REMOVE_ITEM', payload: item});\r\n    };\r\n    const checkoutHandler = () => {\r\n        navigate('/signin?redirect=/shipping');\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"pos\">\r\n            <Helmet>\r\n                <title>Shopping Cart</title>\r\n            </Helmet>\r\n            <h1>Shopping Cart</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    {cartItems.length === 0 ? (\r\n                    <MessageBox>\r\n                        Cart is empty. <Link to=\"/\"> Go Shopping </Link>\r\n                    </MessageBox>\r\n                    ): (\r\n                    <ListGroup>\r\n                        {cartItems.map((item) => (\r\n                            <ListGroup.Item key={item._id}>\r\n                                <Row className=\"align-items-center\">\r\n                                   <Col md={4}>\r\n                                    <img\r\n                                    src={item.image}\r\n                                    alt={item.name}\r\n                                    className=\"img-fluid rounded img-thumbnail\"\r\n                                    ></img>{' '}\r\n                                    <Link to={`/product/${item.slug}`}>{item.name}</Link>\r\n                                   </Col> \r\n                                   <Col md={3}>\r\n                                    <Button variant=\"light\" onClick={() => updateCartHandler(item, item.quantity - 1)} disabled={item.quantity === 1}>\r\n                                        <i className=\"fas fa-minus-circle\"></i>\r\n                                    </Button>{' '}\r\n                                    <span>{item.quantity}</span>{' '}\r\n                                    <Button variant=\"light\" onClick={() => updateCartHandler(item, item.quantity + 1)} disabled={item.quantity === item.countInStock}>\r\n                                        <i className=\"fas fa-plus-circle\"></i>\r\n                                    </Button>\r\n                                   </Col>\r\n                                   <Col md={3}>${item.price}</Col>\r\n                                   <Col md={2}>\r\n                                    <Button variant=\"light\" onClick={() => removeItemHandler(item)}>\r\n                                        <i className=\"fas fa-trash\"></i>\r\n                                    </Button>\r\n                                   </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}       \r\n                    </ListGroup>\r\n                    )}\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <ListGroup variant=\"flush\">\r\n                                <ListGroup.Item>\r\n                                    <h3>\r\n                                        Subtotal ({cartItems.reduce((a,c) => a + c.quantity, 0)}{' '}\r\n                                        items) : ${cartItems.reduce((a,c) => a + c.price * c.quantity, 0)}\r\n                                    </h3>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                <Button\r\n                                    type=\"button\"\r\n                                    variant=\"primary\"\r\n                                    onClick={checkoutHandler}\r\n                                    disabled={cartItems.length === 0}>\r\n                                    Proceed to Checkout\r\n                                </Button>\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Study Projects\\React project1\\frontend\\src\\components\\MessageBox.js",[],[],"D:\\Study Projects\\React project1\\frontend\\src\\screens\\SigninScreen.js",[],[],"D:\\Study Projects\\React project1\\frontend\\src\\screens\\ShippingAddressScreen.js",[],[],"D:\\Study Projects\\React project1\\frontend\\src\\components\\ChecokoutSteps.js",[],[],"D:\\Study Projects\\React project1\\frontend\\src\\screens\\SignupScreen.js",[],[],"D:\\Study Projects\\React project1\\frontend\\src\\screens\\PaymentMethodScreen.js",["98"],[],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport CheckoutSteps from \"../components/ChecokoutSteps\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { Store } from \"../Store\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function PaymentMethodScreen() {\r\n\r\n    const navigate = useNavigate();\r\n    const {state, dispatch: ctxDispatch} = useContext(Store);\r\n    const {\r\n        cart: {shippingAddress, paymentMethod},\r\n    } = state;\r\n\r\n    const [paymentMethodName, setPaymentMethod] = useState(paymentMethod || 'PayPal');\r\n\r\n    useEffect(() => {\r\n        if (!shippingAddress.address) {\r\n            navigate('/shipping');\r\n        }\r\n    }, [shippingAddress, navigate])\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        ctxDispatch({type: 'SAVE_PAYMENT_METHOD', payload: paymentMethodName});\r\n        localStorage.setItem('paymentMethod', paymentMethodName);\r\n        navigate('/placeorder');\r\n    };\r\n\r\n    return <div className=\"sas\">\r\n        <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n        <div className=\"container small-container\">\r\n            <Helmet>\r\n                <title>\r\n                    Payment Method\r\n                </title>\r\n            </Helmet>\r\n            <h1 className=\"my-3\">Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <div className=\"mb-3\">\r\n                {/*<Form.Check\r\n                        type=\"radio\"\r\n                        id=\"PayPal\"\r\n                        label=\"PayPal\"\r\n                        value=\"PayPal\"\r\n                        checked={paymentMethodName === 'PayPal'}\r\n                        onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        />\r\n                <Form.Check\r\n                        type=\"radio\"\r\n                        id=\"Stripe\"\r\n                        label=\"Stripe\"\r\n                        value=\"Stripe\"\r\n                        checked={paymentMethodName === 'Stripe'}\r\n                        onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        />\r\n*/}\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <Button type=\"submit\">Continue</Button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    </div>;\r\n}","D:\\Study Projects\\React project1\\frontend\\src\\screens\\PlaceOrderScreen.js",["99"],[],"import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport CheckoutSteps from \"../components/ChecokoutSteps\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Button, Card, Col, Row } from \"react-bootstrap\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport { Store } from \"../Store\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'CREATE_REQUEST':\r\n            return {...state, loading: true};\r\n        case 'CREATE_SUCCESS':\r\n            return {...state, loading: false};\r\n        case 'CREATE_FAIL':\r\n            return {...state, loading: false};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default function PlaceOrderScreen() {\r\n    const navigate = useNavigate();\r\n\r\n    const [{loading}, dispatch] = useReducer(reducer, {\r\n        loading: false,\r\n    });\r\n\r\n    const {state, dispatch: ctxDispatch} = useContext(Store);\r\n    const {cart, userInfo} = state;\r\n\r\n    const round2 = (num) => Math.round(num*100+Number.EPSILON)/100;\r\n    cart.itemsPrice = round2(\r\n        cart.cartItems.reduce((a,c) => a + c.quantity * c.price, 0)\r\n    );\r\n    cart.shippingPrice = cart.itemsPrice >100 ? round2(0) : round2(10);\r\n    cart.taxPrice = round2(0.15 * cart.itemsPrice);\r\n    cart.totalPrice = cart.itemsPrice + cart.shippingPrice + cart.taxPrice;\r\n\r\n    const initPayment = (data) => {\r\n        const options = {\r\n            key: \"rzp_test_OMXt3qH7IHLWyA\",\r\n            amount: cart.totalPrice*100,\r\n            currency: 'USD',\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n            handler: async (res) => {\r\n                try{\r\n                    const {data} = await Axios.post('http://127.0.0.1:9000/api/orders/verify', res);\r\n                    console.log(data);\r\n                }catch(err){\r\n                    console.log(err);\r\n                }\r\n            },\r\n        };\r\n        const rzp1 = new window.Razorpay(options);\r\n        rzp1.open();\r\n    };\r\n    const placeOrderHandler = async () => {\r\n        try {\r\n            dispatch({type: 'CREATE_REQUEST'});\r\n            const {data} = await Axios.post('http://127.0.0.1:9000/api/orders',\r\n            {\r\n                orderItems: cart.cartItems,\r\n                shippingAddress: cart.shippingAddress,\r\n                paymentMethod: cart.paymentMethod,\r\n                itemsPrice: cart.itemsPrice,\r\n                shippingPrice: cart.shippingPrice,\r\n                taxPrice: cart.taxPrice,\r\n                totalPrice: cart.totalPrice,\r\n            },\r\n            {\r\n                headers: {\r\n                    authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            });\r\n            initPayment(data.data);\r\n            ctxDispatch({type: 'CART_CLEAR'});\r\n            dispatch({type: 'CREATE_SUCCESS'});\r\n            localStorage.removeItem('cartItems');\r\n            navigate(`/order/${data.order._id}`);\r\n\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'CREATE_FAIL'\r\n            });\r\n            alert(err);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(!cart.paymentMethod) {\r\n            navigate('/payment');\r\n        }\r\n    }, [cart, navigate]);\r\n    return <div className=\"pos\">\r\n        <CheckoutSteps step1 step2 step3 step4></CheckoutSteps>\r\n        <Helmet>\r\n            <title>\r\n                Preview Order\r\n            </title>\r\n        </Helmet>\r\n        <h1 className=\"my-3\">Preview Order</h1>\r\n        <Row>\r\n            <Col md={8}>\r\n                <Card className=\"mb-3\">\r\n                    <Card.Body>\r\n                    <Card.Title>Shipping</Card.Title>\r\n                    <Card.Text>\r\n                    <strong>Name:</strong> {cart.shippingAddress.fullName} <br />\r\n                    <strong>Address:</strong> {cart.shippingAddress.address},{cart.shippingAddress.city},{cart.shippingAddress.postalCode},{cart.shippingAddress.country} <br />\r\n                    </Card.Text>\r\n                    <Link to=\"/shipping\">Edit</Link>\r\n                    </Card.Body>\r\n                </Card>\r\n                {/*<Card className=\"mb-3\">\r\n                    <Card.Body>\r\n                        <Card.Title>\r\n                            Payment\r\n                        </Card.Title>\r\n                        <Card.Text>\r\n                            <strong>Method:</strong> {cart.paymentMethod}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n</Card>*/}\r\n                <Card className=\"mb-3\">\r\n                    <Card.Body>\r\n                        <Card.Title>Items</Card.Title>\r\n                        <ListGroup variant=\"flush\">\r\n                            {cart.cartItems.map((item) => (\r\n                                <ListGroup.Item key={item._id}>\r\n                                    <Row className=\"align-items-center\">\r\n                                        <Col md={6}>\r\n                                            <img src={item.image} alt={item.name}\r\n                                            className=\"img-fluid rounded img-thumbnail\"></img>{' '}\r\n                                            <Link to={`/product/${item.slug}`}>{item.name}</Link>\r\n                                        </Col>\r\n                                        <Col md={3}><span>{item.quantity}</span></Col>\r\n                                        <Col md={3}>${item.price}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                        <Link to=\"/cart\">Edit</Link>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title>Order Summary</Card.Title>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice.toFixed(2)}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice.toFixed(2)}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice.toFixed(2)}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Order Total</Col>\r\n                                    <Col>${cart.totalPrice.toFixed(2)}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <div className=\"d-grid\">\r\n                                    <Button\r\n                                        type=\"button\"\r\n                                        onClick={placeOrderHandler}\r\n                                        disabled={cart.cartItems.length === 0}>\r\n                                            Place Order\r\n                                    </Button>\r\n                                </div>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    </div>;\r\n}",[],"D:\\Study Projects\\React project1\\frontend\\src\\screens\\OrderScreen.js",[],[],"D:\\Study Projects\\React project1\\frontend\\src\\utils.js",[],[],{"ruleId":"100","severity":1,"message":"101","line":4,"column":40,"nodeType":"102","messageId":"103","endLine":4,"endColumn":53},{"ruleId":"100","severity":1,"message":"104","line":16,"column":31,"nodeType":"102","messageId":"103","endLine":16,"endColumn":47},{"ruleId":"100","severity":1,"message":"105","line":26,"column":13,"nodeType":"102","messageId":"103","endLine":26,"endColumn":20},"no-unused-vars","'ListGroupItem' is defined but never used.","Identifier","unusedVar","'setPaymentMethod' is assigned a value but never used.","'loading' is assigned a value but never used."]